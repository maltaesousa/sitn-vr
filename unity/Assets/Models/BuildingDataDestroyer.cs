//======================================= 2019, Stéphane Malta e Sousa, sitn-vr =======================================
//
// This script was generated by FME: shapefile2textline2
//
//=====================================================================================================================

using UnityEditor;
using UnityEngine;
using System.Collections.Generic;
using System;

namespace SITN
{
    public class BuildingDataDestroyer : ScriptableWizard
    {
        private List<string> notFounds = new List<string>();
        private Dictionary<string, Dictionary<string, string>> buildings = new Dictionary<string, Dictionary<string, string>>
        {
           { "102305", new Dictionary<string, string>
                {
                    { "Aire", "85 m²"},
                    { "Altitude", "533.99 m" }
                }
            },
           { "102301", new Dictionary<string, string>
                {
                    { "Aire", "123 m²"},
                    { "Altitude", "532.32 m" }
                }
            },
           { "107870", new Dictionary<string, string>
                {
                    { "Aire", "10 m²"},
                    { "Altitude", "533.34 m" }
                }
            },
           { "107873", new Dictionary<string, string>
                {
                    { "Aire", "57 m²"},
                    { "Altitude", "530.89 m" }
                }
            },
           { "102295", new Dictionary<string, string>
                {
                    { "Aire", "183 m²"},
                    { "Altitude", "529.79 m" }
                }
            },
           { "102302", new Dictionary<string, string>
                {
                    { "Aire", "72 m²"},
                    { "Altitude", "533.68 m" }
                }
            },
           { "102307", new Dictionary<string, string>
                {
                    { "Aire", "65 m²"},
                    { "Altitude", "534.24 m" }
                }
            },
           { "102312", new Dictionary<string, string>
                {
                    { "Aire", "610 m²"},
                    { "Altitude", "532.82 m" }
                }
            },
           { "102328", new Dictionary<string, string>
                {
                    { "Aire", "245 m²"},
                    { "Altitude", "532.31 m" }
                }
            },
           { "102327", new Dictionary<string, string>
                {
                    { "Aire", "43 m²"},
                    { "Altitude", "533.51 m" }
                }
            },
           { "102325", new Dictionary<string, string>
                {
                    { "Aire", "78 m²"},
                    { "Altitude", "533.03 m" }
                }
            },
           { "102322", new Dictionary<string, string>
                {
                    { "Aire", "327 m²"},
                    { "Altitude", "530.17 m" }
                }
            },
           { "102351", new Dictionary<string, string>
                {
                    { "Aire", "229 m²"},
                    { "Altitude", "532.61 m" }
                }
            }
        };


        [MenuItem("SITN/Destroy building data")]
        static void CreateWizard()
        {
            ScriptableWizard.DisplayWizard<BuildingDataDestroyer>("Destroy building data", "OK!");
        
        }
        
        
        void OnWizardCreate() { }
        void OnWizardUpdate()
        {
            if (notFounds.ToArray().Length > 0)
            {
                helpString = String.Join(", ", notFounds.ToArray()) + " not found!";
                helpString += Environment.NewLine;
                helpString += "Please be sure the names used in this script match the names of your GameObjects.";
            }
        }

        // Find objects and add attributes to them
        private void Awake()
        {
            try
            {
                foreach (KeyValuePair<string, Dictionary<string, string>> entry in buildings)
                {
                    GameObject go = GameObject.Find(entry.Key);
                    if (go != null)
                    {
                        Process("Destroy", entry, go);
                    } else
                    {
                        notFounds.Add(entry.Key);
                    }
                }
            }
            catch (UnityException)
            {
                EditorUtility.DisplayDialog("Error", "Something went terribly wrong!", "Cancel");
                return;
            }
        }
 
        private void Process(string mode, KeyValuePair<string, Dictionary<string, string>> entry, GameObject go)
        {
            if (mode.ToLower() == "import")
            {
                QueryableBuilding qo = go.AddComponent<QueryableBuilding>();
                qo.aire = entry.Value["Aire"];
                qo.altitude = entry.Value["Altitude"];
                go.AddComponent<BoxCollider>();
            }
            else
            {
                DestroyImmediate(go.GetComponent<QueryableBuilding>());
                DestroyImmediate(go.GetComponent<BoxCollider>());
            }
        }
    }
}

